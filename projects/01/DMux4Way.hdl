// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/DMux4Way.hdl

/**
 * 4-way demultiplexor:
 * {a, b, c, d} = {in, 0, 0, 0} if sel == 00  //倒叙排列 01 中sel[1]为0
 *                {0, in, 0, 0} if sel == 01
 *                {0, 0, in, 0} if sel == 10
 *                {0, 0, 0, in} if sel == 11
 */

CHIP DMux4Way {
    IN in, sel[2];
    OUT a, b, c, d;

    PARTS:
    //sel[1]决定了in在前两个还是在后两个 sel[0]决定了in在前两个/后两个的前面还是后面
    // Put your code here:
    //先用sel[1] 将13位与24位 置0 并分别储存
    DMux(in=in, sel=sel[1], a=left1, b=right1);
    DMux(in=in, sel=sel[1], a=left2, b=right2);

    //现在是
    // 0  0,  in in  或
    // in in, 0  0
    //此时left1 = left2   right2 = righ1
    //将他们当作变量输入
    DMux(in=left1,  sel=sel[0], a=a, b=b);
    DMux(in=right1, sel=sel[0], a=c, b=d);
}